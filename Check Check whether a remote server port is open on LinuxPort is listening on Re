1) echo > /dev/tcp/
  echo > /dev/tcp/10.32.136.208/7092 && echo "Port is open"
  Output:
  If port is open 
    Port is open
  else  
    -bash: connect: Connection refused
    -bash: /dev/tcp/10.32.136.208/7092: Connection refused
    
    * /dev/tcp/host/port
    If host is a valid hostname or Internet address, and port is an integer port number
    or service name, bash attempts to open a TCP connection to the corresponding socket.
    * /dev/udp/host/port
    If host is a valid hostname or Internet address, and port is an integer port number
    or service name, bash attempts to open a UDP connection to the corresponding socket.
    
 2) nc
  nc or netcat is an utility which can do lots of TCP and UDP related stuff including packet transimission, port scanning etc. 
  To check whether a port is open, the syntax is:
      nc -v [host] [port]

  The -v is to print the output in verbose mode and -z is for scanning the listening service at the specified port.

When the port is open, the output looks like

Connection to 192.168.56.160 22 port [tcp/ssh] succeeded

When the port is not open, the output looks like

nc: connect to 192.168.56.160 port 443 (tcp) failed: Connection refused
